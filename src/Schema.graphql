directive @auth on FIELD_DEFINITION | FIELD

scalar Datetime
scalar Upload
type Query{
    getAllEmpresa(cNombreEmpresa:String!):Empresa  @auth
    getUsuario(cNombre:String!):Usuario @auth
    getEmpresabyId(id:String!):Empresa @auth
}


type Mutation{
    createEmpresa(data:inputEmpresa!):Empresa
    createUsuario(data:inputUsuario!):Usuario
    login(data:inputLogin!):Token
    addPhoto(photo:Upload):String

}

type Empresa {
    id:ID,
    cNombreEmpresa:String!,
    cRFC:String!,
    cCorreo:String!,
    cImagen:String,
    lActivo:Boolean,
    dtFechaCreacion: Datetime,
    dtFechaModificacion: Datetime ,
    Usuario: Usuario!
    
}


input inputEmpresa {
    cNombreEmpresa:String!,
    cRFC:String!,
    cCorreo:String!,
    cImagen:String,
    lActivo:Boolean,
    dtFechaCreacion: Datetime,
    dtFechaModificacion: Datetime,
    Usuario: ID
 
}

input inputUsuario{
    cNombre: String!,
    cContrasenia: String!,
    iTipoUsuario: Int!,
    img:String,
    dtFechaCreacion: Datetime,
    dtFechaModificacion: Datetime,

}

type Usuario{
    id:ID,#Se envia por que en mongoose crea un id por defecto
    cNombre: String!,
    cContrasenia: String!,
    iTipoUsuario: Int!,
    img:String,
    dtFechaCreacion: Datetime,
    dtFechaModificacion: Datetime  
}


type Token {
    token: String,
    messagge: String

}

input inputLogin{
    cNombre: String!,
    cContrasenia: String!

}